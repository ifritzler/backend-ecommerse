<table class="table table-sm">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Titulo</th>
      <th scope="col">Precio</th>
      <th scope="col">Imagen</th>
      <th scope="col">Acciones</th>
    </tr>
  </thead>
  <tbody id="product-list">
    <% products.forEach(product => { %>
    <tr class="">
      <th scope="row"><%= product.id %></th>
      <td><%= product.title %></td>
      <td>$ <%= product.price %></td>
      <td>
        <img
          class="img-thumbnail mx-auto d-block"
          style="width: 70px; aspect-ratio: 1/1"
          src="<%= product.thumbnail %> "
          alt="<%= product.title %>"
        />
      </td>
      <td>
        <div class="btn btn-danger delete-btn" data-id="<%= product.id %>">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-trash"
            viewBox="0 0 16 16"
          >
            <path
              d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"
            />
            <path
              fill-rule="evenodd"
              d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"
            />
          </svg>
        </div>
      </td>
    </tr>
    <% }); %>
    <script>
      const addProduct = (product) => {
        const productList = document.getElementById("product-list");
        const newTableRow = document.createElement("tr");
        const newItem = `
          <th scope="row">${product.id}</th>
          <td>${product.title}</td>
          <td>$ ${product.price}</td>
          <td>
            <img class="img-thumbnail mx-auto d-block" style="width: 70px; aspect-ratio: 1/1" src="${product.thumbnail}" alt="${product.title}">
          </td>
          <td>
            <div class="btn btn-danger delete-btn" data-id="${product.id}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"></path>
                <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"></path>
              </svg>
            </div>
          </td>
        `;
        newTableRow.innerHTML = newItem;
        newTableRow.getElementsByClassName('delete-btn')[0].addEventListener("click", async (e) => {
          e.stopPropagation()
          const { id } = e.target.dataset;
          const response = await fetch("/api/products/" + id, {
            method: "delete",
          });
        });
        productList.append(newTableRow);
      };

      const deleteProduct = (id) => {
        const productList = document.getElementById("product-list");
        const newHTML = Array.from(
          productList.getElementsByTagName("tr")
        ).filter((tr) => {
          const currentId = tr.getElementsByTagName("th")[0].innerText;
          if (id != currentId) {
            return true;
          }
        });
        productList.innerHTML = "";
        newHTML.forEach((element) => productList.append(element));
      };

      // ADD NEW PRODUCT
      document
        .getElementById("productCreateForm")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          const data = Object.fromEntries(new FormData(e.target).entries());
          const newProduct = await fetch("/api/products", {
            method: "POST",
            body: JSON.stringify(data),
            headers: { "content-type": "application/json" },
          });
        });

      // DELETE PRODUCTS
      const buttons = document.getElementsByClassName("delete-btn")
      Array.from(buttons).forEach((btn) => {
        btn.addEventListener("click", async (e) => {
          e.stopPropagation()
          const { id } = e.target.dataset;
          const response = await fetch("/api/products/" + id, {
            method: "delete",
          });
        });
      });
    </script>

    <script>
      socket.on("new_product", (product) => {
        addProduct(product);
      });

      socket.on("delete_product", (id) => {
        deleteProduct(id);
      });
    </script>
  </tbody>
</table>
